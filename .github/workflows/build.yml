name: Build release

on:
  push:
    tags:
      - "*"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Set up environment
        run: |
          apt-get update
          apt-get -y install cmake protobuf-compiler zip python
          apt-get -y install build-essential libxmu-dev libxi-dev libgl-dev libglu1-mesa-dev
          apt-get -y install gcc-mingw-w64-x86-64 g++-mingw-w64-x86-64
          mkdir -p "${GITHUB_WORKSPACE}/release"
          run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Build for Linux
        run: |
          "${GITHUB_WORKSPACE}/scripts/build.sh" -l -d -v
          cp -r "${GITHUB_WORKSPACE}/build/bin" "${GITHUB_WORKSPACE}/release/linux"

      - name: Build for Windows
        run: |
          "${GITHUB_WORKSPACE}/scripts/build.sh" -w -d -v
          cp -r "${GITHUB_WORKSPACE}/build/bin" "${GITHUB_WORKSPACE}/release/win32"

      - name: Archive assets
        run: |
          (cd "${GITHUB_WORKSPACE}/release/win32" && zip -r release *)
          (cd "${GITHUB_WORKSPACE}/release/linux" && zip -r release *)

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Linux release asset as zip
        id: upload-release-asset-zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/release/linux/release.zip
          asset_name: ${{ github.event.repository.name }}-${{ env.RELEASE_VERSION }}-linux.zip
          asset_content_type: application/zip

      - name: Upload Windows release asset as zip
        id: upload-release-asset-zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/release/win32/release.zip
          asset_name: ${{ github.event.repository.name }}-${{ env.RELEASE_VERSION }}-win64.zip # Yeah, it's actually a 64-bit binary
          asset_content_type: application/zip